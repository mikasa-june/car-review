= render "header"
.showTop
  .top-container
    .top__picture
      .top__picture--image
        = image_tag @review.image.url, height: '270px', width: '480px', class: 'image' if @review.image.present?
    .top__items
      .tag
        - if @tag1
          .tag-list
            .tag-list_name
              = link_to @tag1.name, category_path(@tag1.id),class: :tag__name
        - if @maker1 or @maker2 or @maker3 or @maker4
          .tag-list
            .tag-list_name
              - if @maker1
                = link_to @maker1.name, category_path(@maker1.id),class: :tag__name
              - if @maker2
                = link_to @maker2.name, category_path(@maker2.id),class: :tag__name
              - if @maker3
                = link_to @maker3.name, category_path(@maker3.id),class: :tag__name
              - if @maker4
                = link_to @maker4.name, category_path(@maker4.id),class: :tag__name
        - if @tag3
          .tag-list
            .tag-list_name
              = link_to @tag3.name, category_path(@tag3.id),class: :tag__name
        -if @tag4
          .tag-list
            .tag-list_name
              = link_to @tag4.name, category_path(@tag4.id),class: :tag__name
        .like-count
          %span
            お気に入り
          .counter
            %i.fas.fa-star
            x
            = @like_review_count
      .top__items--title
        .title__name
          = @review.title
        .title__user
          投稿者：
          = link_to truncate(@review.user.name, length: 20), "/users/#{@review.user_id}",class: :reviewer
      .top__items--btn
        - if user_signed_in? && @review.user_id == current_user.id
          .edit-btn
            = link_to "編集", edit_review_path, class: :edit
          .delete-btn
            = link_to "削除", review_path, method: :delete, class: :delete
        -elsif user_signed_in? && @review.user_id != current_user.id
          .like-btn
            -# = link_to "お気に入り", edit_review_path, class: :like
            - if !LikeReview.exists?(user_id: current_user.id, review_id: @review.id)
              = link_to "お気に入り",review_add_path(@review),method: :post, class: :like 
            - else
              = link_to "お気に入り解除",review_add_path(@review),method: :delete, class: :like
        - else user_signed_in?
          .login-btn
            = link_to "お気に入り登録をするにはログインしてください", new_user_session_path, class: :login
.showMain
  .review
    .review__text 
      = simple_format @review.text
.showBottom
  .showBottom__title
    この投稿へのコメント
  .bottom__comment--form
    - if current_user
      = form_with(model: [@review, @comment], local: true, id: "new_comment") do |form|
        .form__container
          .form
            = form.text_field :text, placeholder: "コメントする", row: 2, class: :textbox
          .send-btn
            = form.submit "投稿", class: :submit
    - else
      = link_to "コメントを投稿するにはログインしてください", new_user_session_path, class: :login
  .bottom__comment--list
    .comment__title
      ＜コメント一覧＞
    .comment__list
      - if @comments
        - @comments.each do |comment| 


          .comment__list--box
            .user-name
              = link_to truncate(comment.user.name, length: 20), "/users/#{comment.user_id}" 
            .date
              = comment.created_at.strftime("%Y/%m/%d(#{%w(日 月 火 水 木 金 土)[comment.created_at.wday]})")
          .comment__list--bottom
            .comment
              = comment.text 
            .delete__btn
              -# %a{:href => "#"} 削除
            .fav
            -# = link_to "星", review_comment_add_path(@review, @comment), method: :post

            
= render "footer"